AnalysisType: rule
RuleID: 'AWS.S3.ServerAccess.IPWhitelist'
DisplayName: 'AWS S3 Access IP Allowlist'
DedupPeriodMinutes: 60 # 1 hour
Enabled: false
LogTypes:
  - AWS.S3ServerAccess
Tags:
  - AWS
  - Configuration Required
  - Identity & Access Management
  - Collection:Data From Cloud Storage Object
Reports:
  MITRE ATT&CK:
    - TA0009:T1530
Severity: Medium
Description: >
  Checks that the remote IP accessing the S3 bucket is in the IP allowlist.
Runbook: >
  Verify whether unapproved access of S3 objects occurred, and take appropriate steps to remediate damage (for example, informing related parties of unapproved access and potentially invalidating data that was accessed). Consider updating the access policies of the S3 bucket to prevent future unapproved access.
Reference: https://aws.amazon.com/premiumsupport/knowledge-center/block-s3-traffic-vpc-ip/
SummaryAttributes:
  - bucket
  - key
  - remoteip
# BUCKETS_TO_MONITOR = {
#    # Example bucket names to watch go here
#}
# ALLOWLIST_NETWORKS = {
#    # IP addresses (in CIDR notation) indicating approved IP ranges for accessing S3 buckets}
#    ip_network("10.0.0.0/8"),
#}
#
#
# def rule(event):
#    if BUCKETS_TO_MONITOR:
#        if event.get("bucket") not in BUCKETS_TO_MONITOR:
#            return False
#
#    if "remoteip" not in event:
#        return False
#
#    cidr_ip = ip_network(event.get("remoteip"))
#    return not any(cidr_ip.subnet_of(approved_ip_range) for approved_ip_range in ALLOWLIST_NETWORKS)
Detection:
  - Key: bucket
    Condition: IsIn
    Values:
      - ExampleBucketName
  - Key: remoteip
    Condition: Exists
  #- Key: ALLOWLIST_NETWORKS # TODO: https://app.asana.com/0/1200908948600035/1204508942056116/f
  #  Condition: NoElement
  #  Expression:
  #    - Key: remoteip
  #      Condition: IsIPAddressInCIDR
  #      Value: NETWORK
Tests:
  - Name: Access From Approved IP
    ExpectedResult: false
    Log: { 'remoteip': '10.0.0.1', 'bucket': 'my-test-bucket' }
  - Name: Access From Unapproved IP
    ExpectedResult: true
    Log: { 'remoteip': '11.0.0.1', 'bucket': 'my-test-bucket' }
