name: Release PR

on:
  workflow_dispatch:

jobs:
  release_pr:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install pip and pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Bump version and test
      id: bump_version
      run: |
        export NEW_VERSION=$(cat VERSION | awk -F. '{printf "%s.%d.0", $1, $2+1}')
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "::set-output name=new_version::$NEW_VERSION"
        echo $NEW_VERSION > VERSION
        sed -i "s/VERSION_STRING: Final = \"[0-9]*\.[0-9]*\.[0-9]*\"/VERSION_STRING: Final = \"$NEW_VERSION\"/" panther_analysis_tool/constants.py
        make venv
        pipenv run python setup.py sdist
        pipenv run pip install dist/panther_analysis_tool-$NEW_VERSION.tar.gz
        pipenv run make test

    - name: Create Branch and Pull Request
      run: |
        NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
        git config user.name "dac-bot"
        git config user.email "dac-bot@panther.com"
        git checkout -b "$NEW_VERSION"
        git commit -a -m "version bump"
        git push --set-upstream origin "$NEW_VERSION"
        gh pr create -t "Version bump to v$NEW_VERSION"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_github_release_and_pypi:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install pip and pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Release and publish to PyPI
      run: |
        export NEW_VERSION=$(cat VERSION)
        git config user.name "dac-bot"
        git config user.email "dac-bot@panther.com"
        gh release create v$NEW_VERSION -t v$NEW_VERSION
        make pypi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
